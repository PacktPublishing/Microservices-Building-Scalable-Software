#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

import getpass

DEFAULT_CMD = 'cp /vagrant/src/test/sh/org/apache/aurora/e2e/http_example.py .'

echo_ports = Process(
  name = 'echo_ports',
  cmdline = 'echo "tcp port: {{thermos.ports[tcp]}}; http port: {{thermos.ports[http]}}; alias: {{thermos.ports[alias]}}"'
)

run_server = Process(
  name = 'run_server',
  cmdline = 'python http_example.py {{thermos.ports[http]}}')

stage_server = Process(
  name = 'stage_server',
  cmdline = '{{cmd}}'
)

test_task = Task(
  name = 'http_example',
  resources = Resources(cpu=0.4, ram=32*MB, disk=64*MB),
  processes = [echo_ports, stage_server, run_server],
  constraints = order(echo_ports, stage_server, run_server))

update_config = UpdateConfig(watch_secs=10, batch_size=2)
health_check_config = HealthCheckConfig(initial_interval_secs=5, interval_secs=1)

job = Service(
  cluster = 'devcluster',
  instances = 2,
  update_config = update_config,
  health_check_config = health_check_config,
  task = test_task,
  role = getpass.getuser(),
  environment = 'test',
  contact = '{{role}}@localhost',
  announce = Announcer(
    portmap={'alias': 'http'},
  ),
)

jobs = [
  job(
    name = 'http_example'
  ).bind(
    cmd = DEFAULT_CMD
  ),
  job(
    name = 'http_example_revocable',
    tier = 'revocable'
  ).bind(
    cmd = DEFAULT_CMD
  ),
  job(
    name = 'http_example_docker',
    container = Container(docker=Docker(image = 'http_example'))
  ).bind(
    cmd = 'cp /tmp/http_example.py .'
  )
]
