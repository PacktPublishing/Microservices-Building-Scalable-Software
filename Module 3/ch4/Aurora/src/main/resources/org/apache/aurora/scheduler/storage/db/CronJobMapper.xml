<?xml version="1.0" encoding="UTF-8" ?>
<!--
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 -->

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.apache.aurora.scheduler.storage.db.CronJobMapper">

  <insert id="merge">
    MERGE INTO cron_jobs(
      job_key_id,
      creator_user,
      cron_schedule,
      <if test="job.cronCollisionPolicy != null">
        cron_collision_policy,
      </if>
      task_config_row_id,
      instance_count
    ) KEY(job_key_id) VALUES (
      (
        SELECT ID
        FROM job_keys
        WHERE role = #{job.key.role}
          AND environment = #{job.key.environment}
          AND name = #{job.key.name}
      ),
      #{job.owner.user},
      #{job.cronSchedule},
      <if test="job.cronCollisionPolicy != null">
      #{job.cronCollisionPolicy, typeHandler=org.apache.aurora.scheduler.storage.db.typehandlers.CronCollisionPolicyTypeHandler},
      </if>
      #{task_config_id},
      #{job.instanceCount}
    )
  </insert>

  <delete id="delete">
    DELETE FROM cron_jobs
    WHERE job_key_id
    IN (SELECT id
        FROM job_keys
        WHERE role = #{job.role}
          AND environment = #{job.environment}
          AND name = #{job.name})
  </delete>

  <delete id="truncate">
    DELETE FROM cron_jobs
  </delete>

  <resultMap
      id="cronJobWrapperResultMap"
      type="org.apache.aurora.scheduler.storage.db.views.DbJobConfiguration">

    <id column="c_id" />
    <result property="owner.user" column="creator_user"/>
    <result
        property="cronCollisionPolicy"
        column="cron_collision_policy"
        typeHandler="org.apache.aurora.scheduler.storage.db.typehandlers.CronCollisionPolicyTypeHandler"/>
    <association
        property="key"
        resultMap="org.apache.aurora.scheduler.storage.db.JobKeyMapper.jobKeyMap"
        columnPrefix="j_"/>
    <association
        property="taskConfig"
        select="org.apache.aurora.scheduler.storage.db.TaskConfigMapper.selectConfig"
        column="task_config_row_id"
        foreignColumn="id"/>
  </resultMap>

  <sql id="unscopedSelect">
    SELECT
      c.id AS c_id,
      c.creator_user AS creator_user,
      c.cron_schedule AS cron_schedule,
      c.cron_collision_policy AS cron_collision_policy,
      c.task_config_row_id AS task_config_row_id,
      c.instance_count AS instance_count,
      j.role AS j_role,
      j.environment AS j_environment,
      j.name AS j_name
    FROM cron_jobs AS c
    INNER JOIN job_keys AS j ON j.id = c.job_key_id
  </sql>

  <select id="selectAll" resultMap="cronJobWrapperResultMap">
    <include refid="unscopedSelect"/>
  </select>

  <select id="select" resultMap="cronJobWrapperResultMap">
    <include refid="unscopedSelect"/>
    WHERE j.role = #{job.role}
      AND environment = #{job.environment}
      AND name = #{job.name}
  </select>
</mapper>
